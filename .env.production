# ================================================
# Restaurant Management System - Production Config
# ================================================
# Copy this file to .env and update with your values

# Django Configuration
# --------------------
# Generate a secure key: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
DJANGO_SECRET_KEY=your-super-secret-production-key-here
DEBUG=0

# Domain Configuration
# --------------------
# Your domain name (without http://)
DOMAIN_NAME=your-domain.com
# EC2 public IP (find it in AWS console)
EC2_PUBLIC_IP=your-ec2-public-ip

# Database Configuration (RDS PostgreSQL)
# --------------------------------------
# Find these values in your RDS instance details
RDS_DB_NAME=restaurant_db
RDS_USERNAME=postgres
RDS_PASSWORD=your-rds-password-here
RDS_HOSTNAME=your-instance.region.rds.amazonaws.com
RDS_PORT=5432

# AWS Configuration
# -----------------
# Create IAM user with S3 access
AWS_ACCESS_KEY_ID=your-access-key-here
AWS_SECRET_ACCESS_KEY=your-secret-access-key-here
AWS_DEFAULT_REGION=us-east-1
# S3 bucket name (must be globally unique)
AWS_S3_BUCKET_NAME=restaurant-app-your-unique-name

# Frontend Configuration
# ---------------------
# CloudFront distribution domain
FRONTEND_DOMAIN=your-distribution.cloudfront.net

# Security
# --------
USE_SSL=true

# Localization
# ------------
TIME_ZONE=America/Lima

# Optional: Monitoring
# -------------------
# SENTRY_DSN=your-sentry-dsn-here

# Optional: Email Configuration
# ----------------------------
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password
# EMAIL_USE_TLS=true