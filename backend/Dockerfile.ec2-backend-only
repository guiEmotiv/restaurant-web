# Backend-only Dockerfile for EC2 production deployment
FROM python:3.12-slim as production

# Environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=backend.settings_ec2

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Create app directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt gunicorn

# Copy backend code
COPY . .

# Create directories and set permissions
RUN mkdir -p /app/staticfiles /app/media /app/data \
    && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/admin/ || exit 1

EXPOSE 8000

# Start script
CMD ["sh", "-c", "\
    echo 'ðŸš€ Starting Restaurant Management System - EC2 Backend Only' && \
    python manage.py migrate --noinput && \
    python manage.py collectstatic --noinput --clear && \
    if [ -n \"$DJANGO_SUPERUSER_USERNAME\" ] && [ -n \"$DJANGO_SUPERUSER_PASSWORD\" ] && [ -n \"$DJANGO_SUPERUSER_EMAIL\" ]; then \
        python manage.py createsuperuser --noinput || echo 'Superuser already exists'; \
    fi && \
    exec gunicorn --bind 0.0.0.0:8000 --workers 2 --timeout 120 --keep-alive 5 --max-requests 1000 --access-logfile - --error-logfile - backend.wsgi:application"]